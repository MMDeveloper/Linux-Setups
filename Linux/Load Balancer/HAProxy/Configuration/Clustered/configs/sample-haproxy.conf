global
    log         127.0.0.1 local0
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    user        haproxy
    group       haproxy
    daemon
    stats socket /var/lib/haproxy/stats level admin
    maxconn     4000
    tune.ssl.default-dh-param 2048
    crt-base /etc/letsencrypt/live
    #lua-load /etc/haproxy/plugins/haproxy-acme-validation-plugin-0.1.1/acme-http01-webroot.lua


defaults
    log                     global
    option                  dontlognull
    option                  redispatch
    retries                 3
    timeout http-request    5s
    timeout queue           1m
    timeout connect         5s
    timeout client          5s
    timeout server          10s
    timeout http-keep-alive 10s
    timeout check           10s

frontend http-in
    bind :80
    mode http
    option httplog

    stick-table type ip size 100k expire 30s store conn_cur,conn_rate(10s),http_req_rate(10s),http_err_rate(10s)
    tcp-request connection track-sc0 src

    # Reject if client has more than X concurrent connections
    http-request add-header X-Haproxy-Throttle %[req.fhdr(X-Haproxy-Throttle,-1)]active-connections, if { src_conn_cur ge 10 }
    # Reject if client has passed the HTTP connection rate
    http-request add-header X-Haproxy-Throttle %[req.fhdr(X-Haproxy-Throttle,-1)]connection-rate, if { src_conn_rate ge 30 }
    # Reject if client has passed the HTTP error rate
    http-request add-header X-Haproxy-Throttle %[req.fhdr(X-Haproxy-Throttle,-1)]error-rate, if { sc0_http_err_rate() gt 3 }
    # Reject if client has passed the HTTP request rate
    http-request add-header X-Haproxy-Throttle %[req.fhdr(X-Haproxy-Throttle,-1)]request-rate, if { sc0_http_req_rate() gt 90 }

    #acls
    acl request_abuser req.fhdr(X-Haproxy-Throttle) -m found
    #acl isletsencrypt url_beg /.well-known/acme-challenge/
    #http-request deny if request_abuser
    #http-request use-service lua.acme-http01 if isletsencrypt
    http-request del-header Proxy

    #backend
    use_backend be_slowdown_chump if request_abuser
    default_backend be_localhost_www

frontend https-in
    bind :443 ssl crt haproxy.pem ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4 no-sslv3

    mode http
    option httplog

    stick-table type ip size 100k expire 30s store conn_cur,conn_rate(10s),http_req_rate(10s),http_err_rate(10s)
    tcp-request connection track-sc0 src

    ## Reject if client has more than X concurrent connections
    http-request add-header X-Haproxy-Throttle %[req.fhdr(X-Haproxy-Throttle,-1)]active-connections, if { src_conn_cur ge 10 }
    ## Reject if client has passed the HTTP connection rate
    http-request add-header X-Haproxy-Throttle %[req.fhdr(X-Haproxy-Throttle,-1)]connection-rate, if { src_conn_rate ge 30 }
    ## Reject if client has passed the HTTP error rate
    http-request add-header X-Haproxy-Throttle %[req.fhdr(X-Haproxy-Throttle,-1)]error-rate, if { sc0_http_err_rate() gt 3 }
    ## Reject if client has passed the HTTP request rate
    http-request add-header X-Haproxy-Throttle %[req.fhdr(X-Haproxy-Throttle,-1)]request-rate, if { sc0_http_req_rate() gt 90 }

    reqadd X-Forwarded-Proto:\ https
    rspadd Strict-Transport-Security:\ max-age=31536000;\ includeSubDomains
    #rspadd Public-Key-Pins:\ pin-sha256="";\ max-age=5184000;\ includeSubDomains

    #acls
    #acl use_be_openvpn hdr_end(host) -i fe-vpn.duckdns.org
    acl request_abuser req.fhdr(X-Haproxy-Throttle) -m found
    #http-request deny if request_abuser
    http-request del-header Proxy

    #backend
    #use_backend be_openvpn if use_be_openvpn
   use_backend be_slowdown_chump if request_abuser
    #use_backend be_localhost_www_spdy if { ssl_fc_npn -i spdy }

    default_backend be_localhost_wwws


frontend stats
    bind 0.0.0.0:8080
    mode http
    stats enable
    stats uri /
    stats auth  mmdeveloper:supersecretpasswordhere
    stats admin if TRUE

backend be_localhost_www
    mode http
    balance roundrobin
    option redispatch
    option forwardfor
    option http-server-close
    server web1 127.0.0.1:1080 check inter 4s weight 1 rise 3

backend be_localhost_wwws
    mode http
    balance roundrobin
    option redispatch
    option forwardfor
    option http-server-close
    server web1 127.0.0.1:10443 check inter 4s weight 1 rise 3

backend be_slowdown_chump
    mode http
    timeout tarpit 15s
    http-request tarpit
    errorfile 500 /usr/share/haproxy/ratelimit.http
    errorfile 503 /usr/share/haproxy/ratelimit.http
    errorfile 504 /usr/share/haproxy/ratelimit.http